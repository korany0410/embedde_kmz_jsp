0324==============
=================================
ORM 프레임워크란, 객체 지향 언어로 작성된 코드를 
데이터베이스에 저장하고 불러오기 쉽게 만들어주는
 도구라고 생각하면 돼요. 예를 들어, 우리가 만약 학생
 정보를 객체로 표현한다고 하면, ORM 프레임워크는
 이 객체와 데이터베이스 테이블을 연결시켜주는 역할
을 해요.

그 중에서도 마이바티스는 XML 파일을 이용해서
 SQL 쿼리를 작성하고, 이를 객체와 매핑하는 방식으로
 동작합니다. 그리고 이 매핑 파일과 설정 파일,
 그리고 SqlSession 객체를 이용해서 데이터베이스에
 접근하고 조작할 수 있습니다.

개발자가 직접 SQL 쿼리를 작성하지 않아도, 
객체 지향적인 코드를 작성하면서 데이터베이스에
 접근할 수 있어서, 개발 생산성을 높일 수 있습니다.

=================================
마이바티스


web-inf> lib에 
mybatis-3.1.1.jar 넣기

src > service 만들기
service > MyBatisConnector 클래스 만들기
//서비스는 마이바티스 설정파일에 접근하는 형태로 
다시 코드를 짠다
//컨넥터 안에 생성자 싱글톤 만들기

src > config.mybatis 안에
sqlMapConfig.xml 넣기


src >config.mybatis.mapper 안에
sawon.xml넣기


==============================
[마이바티스를 활용한 고객리스트 만들기]

1. gogekVO만들기
	--> getter&setter 필수 

2. godekDAO 만들어서 mapper에게 select를 요청받기
	마이바티스를 사용하는 dao에서 추가되야 할것들
	1) sqlSession factory;
	*2) godekDAO 생성자 
		--> 매퍼로접근하기 위함
	3)  List<GogekVO> select() 
		--> 고객목록을 가져오기 위함 / return값 vo

3. mapper를 만들어서  id="gogek_list"인 <select>태그 만들기
	--> resultType="vo.GogekVO"도 반드시 만들어야 함

4. 서블릿에서 결과를 받는다
	1 )고객목록 조회
		--> dao에서 결과 요청
	2) 받아온 list를 request영역에 바인딩
	3) 바인딩 된 정보를 "gogek_list.jsp" 로 포워딩
	
5. "gogek_list.jsp" 만들기
	--> html 태그와 EL표기법을 활용해 표를 만들어줌
	1) 먼저 forEach를 사용하기 위해
		<%@taglib prefix="c" uri="" %>지정해줘야 함
	2) body영역에서 forEach문 만들기 
		<c:forEach var="vo"(변수명) items="${ list }"(포워딩을 통해 받은 키값)>

6. "gogek_list.jsp"에서 delete만들기
	1) script영역에서 del 함수를 만든다.
		--> "gogek_del.do?idx="f.idx.value;
	2) body에서 삭제버튼을 만들고 onclick="del(this.form); 
	
7. GogekDAO에서 delete메서드를 만들어준다.
	1) mapper에게 





6. action 서블릿에서 컴파일한다.



================================
0327

고객테이블에 시퀀스를 만들어서 start database에 넣어준다
	create sequence seq_gogek_idx;

gogek_list.jsp에 돌아와서 고객을 추가하는 버튼을 생성한다
	추가 버튼 클릭 시 아래의 insert_form.jsp로 연결되도록

insert_form.jsp 만들어준다
	//버튼을 눌렀을때 insert서블릿으로 보내기
	f.action = "insert_form.do";


insert_form.do 매핑을 가지고있는 서블릿 만들기 (GogekInsertAction)
	send함수에서 넘겨준 name, addr, jumin, godam이 파라미터 받기
	// insert_from.do?name=홍길동&addr=서울시 관악구&jumin=801111....&godam=10;
		
	int godam= Integer.parseInt(request.getParameter("godam"));

	//정보들을 vo로 묶어서 dao에 전달
		GogekVO vo = new GogekVO();

	GogekDAO.getInstance().insert(vo);


Gogek DAO에서 고객추가하기
	//sqlSession mapper로 전달핳 수있는 파라미터는 무조건 무조건 한개!:vo
		int res = sqlSession.insert("g.gogek_ins", vo);
		response.sendRedirect("gogeklist.do");



gogek.xml에서 db의 정보 연결시켜줌



==============
gogek_list.jsp에 돌아와서 등록버튼 옆에 지역 검색 만들기
	<input placeholder="검색할 지역을 입력하세요" id="addr_search">

	search메서드 만들기
		location.href="gogek_search.do?addr="+addr_search;

gogek_search.do 서블릿 만들기 (SearchAction)
	



































